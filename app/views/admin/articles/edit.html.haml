- url = @article.new_record? ? new_polymorphic_path([:admin, @article]) : polymorphic_path([:admin, @article]) 
- form_for [:admin, @article], :url => url, :html => {:class => 'full'} do |f| 
  .field
    = f.label :title 
    = error_message_on @article, :title 
    = f.text_field :title 
  .field
    = f.label :subtitle
    = f.text_field :subtitle 
  .field
    = f.label :category
    = collection_select(:article, :category_id, Category.all, :id, :title, { :include_blank => true })
  .field
    = f.label :publication_date
    = f.date_select :publication_date
  .field 
    = f.label :lead 
    .textile-editor  
      = textile_editor :article, :lead, :rows => 8  
  .field
    = f.label "Изображения"
    .images
      .images-toolbar
        .button{:onclick=>"refresh_images(#{@article.new_record?})"}
          Обновить
        = link_to_remote "Загрузить", :class => 'button', :url => new_admin_image_path(:article_id => @article), :method => :get
      .images-list
        - for image in (@article.images || [])
          = render :partial => "admin/images/image.html.haml", :locals => {:image => image}
    - for image in (@article.images || [])
      %input{:type=>'hidden', :name=>"article[image_ids][]", :value=>"#{image.id}"}   
  .field
    = f.label :text
    .textile-editor
      = textile_editor :article, :text 
  .field
    = f.submit "Сохранить"
  
  = textile_editor_initialize 
  
:javascript
    $('textarea').focus(function(){$('textarea').removeAttr('focused'); $(this).attr('focused', 'focused') })
    
    function refresh_images(is_new_record) {
      if(is_new_record) return false;
      #{remote_function :url => admin_article_images_path(@article), :method => :get, :update => ".images-list"}
    }
    function load_add_image_form() {
      console.info(jQuery('#add-image.dialog.contents'))
      
      #{remote_function :url => new_admin_image_path, :method => :get, :update => "#add-image.dialog.contents"}
      return false;
    }
    //refresh_images(#{@article.new_record?});
